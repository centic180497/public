{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/googlemap_violation.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport MapOptions from \"../../../components/google_map_controlled\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MarkerComponent from \"../googlemap_violation/marker\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleMap, InfoWindow } from \"react-google-maps\";\nimport ShapeNoparking from \"../googlemap_violation/marker/shape_noparking\";\nimport clsx from \"clsx\";\nimport { TypeNoParkingOptions } from \"../../../utils/constants\";\nimport { Typography } from \"@material-ui/core\";\nimport { Timeline as TimelineIcon, LocalParking as LocalParkingIcon, ArrowRight as ArrowRightIcon, ArrowLeft as ArrowLeftIcon, Clear as ClearIcon, ChevronLeft as ChevronLeftIcon } from \"@material-ui/icons\"; // import Lightbox from \"react-image-lightbox\";\n// import {\n//   LightgalleryProvider,\n//   LightgalleryItem,\n//   withLightgallery,\n//   useLightgallery,\n// } from \"react-lightgallery\";\n// const OpenButtonWithHook = (props) => {\n//   const classes = useStyles();\n//   const ref = useRef({});\n//   const settings = {\n//     dots: true,\n//     speed: 500,\n//     slidesToShow: 1,\n//   };\n//   const next = () => {\n//     ref.current.slickPrev();\n//   };\n//   const prev = () => {\n//     ref.current.slickNext();\n//   };\n//   const { openGallery } = useLightgallery();\n//   return (\n//     <>\n//       <Slider {...settings} className={classes.slider} ref={ref}>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={image}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={img}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={img2}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         {/* <OpenGallery222 classes={classes.imgpopup} image={image} /> */}\n//       </Slider>\n//       <div className={classes.slidebutton}>\n//         <div className={classes.next} onClick={() => next()}>\n//           <NavigateBeforeIcon className={classes.iconbutton} />\n//         </div>\n//         <div className={classes.prev} onClick={() => prev()}>\n//           <NavigateNextIcon className={classes.iconbutton} />\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\nfunction MapViolation(props) {\n  var _props$noParking, _props$vehicle$data, _props$noParking2;\n\n  const ref = useRef({});\n  const lightbox = useRef();\n  const classes = useStyles();\n  const {\n    0: map,\n    1: setMap\n  } = useState(null);\n  const {\n    0: infoWindowShape,\n    1: setInfoWindowShape\n  } = useState(null); // useEffect(() => {\n  //   let value = props.noParking.filter((data) => data.id === props.Infowindow.id);\n  //   console.log(value);\n  //   if (value.length) {\n  //     let e = { ...value[0] };\n  //     console.log(e);\n  //     if (e.path.length % 2 !== 0) {\n  //       let index = Math.ceil(e.path.length / 2);\n  //       e.latLng = e.path[index];\n  //     } else {\n  //       let pointFirst;\n  //       let pointLast;\n  //       if (e.path.length < 3) {\n  //         pointFirst = e.path[0];\n  //         pointLast = e.path[1];\n  //       } else {\n  //         let i = e.path.length / 2;\n  //         pointFirst = e.path[i];\n  //         pointLast = e.path[i + 1];\n  //       }\n  //       let lat = (pointFirst.lat + pointLast.lat) / 2;\n  //       let lng = (pointFirst.lng + pointLast.lng) / 2;\n  //       e.latLng = { lat, lng };\n  //     }\n  //     console.log(e);\n  //     showInfoWindowShape(e);\n  //   }\n  // }, [props.Infowindow]);\n  // const { openGallery } = useLightgallery();\n  // const clearInfoWindow = () => {\n  //   if (infoWindowShape) {\n  //     infoWindowShape.open(null);\n  //   }\n  // };\n  // const handleClose = () => {\n  //   setOpendialog(false);\n  // };\n  // const next = () => {\n  //   ref.current.slickPrev();\n  // };\n  // const prev = () => {\n  //   ref.current.slickNext();\n  // };\n  // const showInfoWindowShape = (e) => {\n  //   clearInfoWindow();\n  //   const settings = {\n  //     dots: true,\n  //     speed: 500,\n  //     slidesToShow: 1,\n  //   };\n  //   // const { openGallery } = useLightgallery();\n  //   // const { openGallery } = useLightgallery();\n  //   const slide = (\n  //     <React.Fragment>\n  //       <LightgalleryProvider>\n  //         {images.map((item) => (\n  //           // <LightgalleryItem image={item}></LightgalleryItem>\n  //           <div\n  //             styles={{\n  //               maxWidth: \"250px\",\n  //               width: \"100px\",\n  //               padding: \"5px\",\n  //             }}\n  //           >\n  //             <LightgalleryItem group=\"item1\" src={item}>\n  //               {/* <img src={item} style={{ width: \"100%\" }} /> */}\n  //             </LightgalleryItem>\n  //           </div>\n  //         ))}\n  //         <div\n  //           onMouseOver={() => {\n  //             setOpacity(1);\n  //           }}\n  //           onMouseOut={() => {\n  //             setOpacity(0);\n  //           }}\n  //           className={classes.slidercontent}\n  //           id=\"slider\"\n  //         >\n  //           <OpenButtonWithHook />\n  //         </div>\n  //       </LightgalleryProvider>\n  //     </React.Fragment>\n  //   );\n  //   // const button = (\n  //   //   <React.Fragment>\n  //   //     <div onClick={() => dialogtable()} id=\"button\">\n  //   //       <Button\n  //   //         variant=\"outlined\"\n  //   //         color=\"primary\"\n  //   //         className={classes.infotitlepopup}\n  //   //       >\n  //   //         chi tiáº¿t <SendIcon className={classes.icon} />\n  //   //       </Button>\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   // );\n  //   const Popup = <CustomInfoWindow info={e} />;\n  //   let infoWindow = new window.google.maps.InfoWindow({\n  //     content: ``,\n  //   });\n  //   if (map) {\n  //     let content = ReactDOMServer.renderToString(Popup);\n  //     infoWindow.setPosition(e.latLng);\n  //     infoWindow.setContent(content);\n  //     infoWindow.open(map);\n  //     window.google.maps.event.addListener(infoWindow, \"domready\", function () {\n  //       ReactDOM.render(\n  //         React.Children.only(slide),\n  //         document.getElementById(\"slide\")\n  //         // document.getElementById(\"button\")\n  //       );\n  //     });\n  //     // window.google.maps.event.addListener(infoWindow, \"domready\", function () {\n  //     //   ReactDOM.render(\n  //     //     React.Children.only(button),\n  //     //     document.getElementById(\"button\")\n  //     //   );\n  //     // });\n  //     setInfoWindowShape(infoWindow);\n  //   }\n  // };\n  // const mapEvent = (ref) => {\n  //   if (ref) {\n  //     setMap(ref.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n  //   }\n  // };\n\n  const onChangeMapClick = () => {\n    // clearInfoWindow();\n    props.clearInfowindow();\n  };\n\n  const handleHideBoxNote = () => {\n    props.toggleBoxNote();\n  };\n\n  return /*#__PURE__*/_jsxDEV(MapOptions, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      onClick: onChangeMapClick,\n      zoom: 13,\n      defaultCenter: {\n        lat: 16.04319399907483,\n        lng: 108.21515312158203\n      } // ref={mapEvent}\n      // onClick={(e) => handleMap(e)}\n      ,\n      children: [((_props$noParking = props.noParking) === null || _props$noParking === void 0 ? void 0 : _props$noParking.length) ? props.noParking.map((marker, index) => {\n        return /*#__PURE__*/_jsxDEV(ShapeNoparking, {\n          marker: marker,\n          id: marker.id,\n          ref: ref,\n          handleClose: () => handleClose()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this);\n      }) : null, ((_props$vehicle$data = props.vehicle.data) === null || _props$vehicle$data === void 0 ? void 0 : _props$vehicle$data.length) > 0 ? props.vehicle.data.map((marker, index) => {\n        // console.log(marker);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MarkerComponent, {\n            marker: marker,\n            // id={marker.id}\n            lat: marker.camera.lat,\n            lng: marker.camera.lng\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this)\n        }, void 0, false);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), ((_props$noParking2 = props.noParking) === null || _props$noParking2 === void 0 ? void 0 : _props$noParking2.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.note,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: clsx(classes.toggleNote, {\n          [classes.toggleNoteHide]: !props.openNote\n        }),\n        onClick: handleHideBoxNote,\n        children: props.openNote ? /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: clsx({\n          [classes.boxNoteHide]: !props.openNote,\n          [classes.boxNote]: props.openNote\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          children: \"Ch\\xFA th\\xEDch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), TypeNoParkingOptions.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(TimelineIcon, {\n              style: {\n                color: data.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MapViolation;\nconst useStyles = makeStyles(() => ({\n  // slider: {\n  //   width: 450,\n  // },\n  // slidercontent: {\n  //   width: \"100%\",\n  //   position: \"relative\",\n  //   \"&:hover div:last-child\": {\n  //     opacity: 1,\n  //   },\n  // },\n  // slidebutton: {\n  //   transition: \"0.2s\",\n  //   position: \"absolute\",\n  //   top: \"50%\",\n  //   width: \"100%\",\n  //   display: \"flex\",\n  //   justifyContent: \"space-between\",\n  //   opacity: 0,\n  // },\n  // imgpopup: {\n  //   cursor: \"pointer\",\n  //   width: \"450px\",\n  //   height: 300,\n  // },\n  title: {\n    fontWeight: 500,\n    fontFamily: \"Nunito, sans-serif\"\n  },\n  // dialog: {\n  //   height: \"100%\",\n  //   width: \"100%\",\n  // },\n  // imagepopup: {\n  //   width: 350,\n  // },\n  // infotitlepopup: {\n  //   cursor: \"pointer\",\n  //   color: \"#3c16ce\",\n  //   float: \"right\",\n  //   marginTop: \"-40px\",\n  // },\n  // icon: {\n  //   fontSize: 14,\n  //   marginLeft: 5,\n  // },\n  // titlepopup: {\n  //   padding: 20,\n  // },\n  // next: {\n  //   width: 30,\n  //   height: 30,\n  //   borderRadius: \"50%\",\n  //   transition: \"0.5s\",\n  //   color: \"black\",\n  //   cursor: \"pointer\",\n  //   border: \"none\",\n  //   backgroundColor: \"white\",\n  // },\n  // prev: {\n  //   width: 30,\n  //   height: 30,\n  //   borderRadius: \"50%\",\n  //   transition: \"0.5s\",\n  //   color: \"black\",\n  //   border: \"none\",\n  //   cursor: \"pointer\",\n  //   backgroundColor: \"white\",\n  // },\n  // iconbutton: {\n  //   marginTop: 2,\n  //   marginLeft: 2,\n  // },\n  // font: {\n  //   fontFamily: \"Nunito, sans-serif\",\n  // },\n  //note\n  note: {\n    position: \"absolute\",\n    top: \"50%\",\n    right: 10,\n    transform: \"translateY(-50%)\",\n    \"& ul\": {\n      padding: 10,\n      listStyle: \"none\",\n      margin: 0,\n      background: \"#fafafa\",\n      transition: \".3s ease-in-out\",\n      borderRadius: 4,\n      position: \"relative\",\n      boxShadow: \"0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\n      \"& li\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        lineHeight: \"35px\",\n        \"& span\": {\n          marginLeft: 8\n        }\n      }\n    }\n  },\n  toggleNote: {\n    background: \"#fafafa\",\n    position: \"absolute\",\n    top: 4,\n    right: 4,\n    width: 40,\n    height: 40,\n    textAlign: \"center\",\n    color: \"grey\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    zIndex: 1,\n    alignItems: \"center\",\n    borderRadius: \"50%\"\n  },\n  toggleNoteHide: {\n    boxShadow: \"-1px -5px 5px #504e4e57\"\n  },\n  boxNoteHide: {\n    display: \"none\"\n  },\n  boxNote: {\n    display: \"block\"\n  }\n}));","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/googlemap_violation.jsx"],"names":["React","useRef","useEffect","useState","MapOptions","makeStyles","MarkerComponent","ReactDOM","GoogleMap","InfoWindow","ShapeNoparking","clsx","TypeNoParkingOptions","Typography","Timeline","TimelineIcon","LocalParking","LocalParkingIcon","ArrowRight","ArrowRightIcon","ArrowLeft","ArrowLeftIcon","Clear","ClearIcon","ChevronLeft","ChevronLeftIcon","MapViolation","props","ref","lightbox","classes","useStyles","map","setMap","infoWindowShape","setInfoWindowShape","onChangeMapClick","clearInfowindow","handleHideBoxNote","toggleBoxNote","lat","lng","noParking","length","marker","index","id","handleClose","vehicle","data","camera","note","toggleNote","toggleNoteHide","openNote","boxNoteHide","boxNote","title","color","name","fontWeight","fontFamily","position","top","right","transform","padding","listStyle","margin","background","transition","borderRadius","boxShadow","display","alignItems","lineHeight","marginLeft","width","height","textAlign","justifyContent","cursor","zIndex"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport MapOptions from \"../../../components/google_map_controlled\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MarkerComponent from \"../googlemap_violation/marker\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleMap, InfoWindow } from \"react-google-maps\";\nimport ShapeNoparking from \"../googlemap_violation/marker/shape_noparking\";\nimport clsx from \"clsx\";\nimport { TypeNoParkingOptions } from \"../../../utils/constants\";\nimport { Typography } from \"@material-ui/core\";\nimport {\n  Timeline as TimelineIcon,\n  LocalParking as LocalParkingIcon,\n  ArrowRight as ArrowRightIcon,\n  ArrowLeft as ArrowLeftIcon,\n  Clear as ClearIcon,\n  ChevronLeft as ChevronLeftIcon,\n} from \"@material-ui/icons\";\n// import Lightbox from \"react-image-lightbox\";\n// import {\n//   LightgalleryProvider,\n//   LightgalleryItem,\n//   withLightgallery,\n//   useLightgallery,\n// } from \"react-lightgallery\";\n\n// const OpenButtonWithHook = (props) => {\n//   const classes = useStyles();\n//   const ref = useRef({});\n//   const settings = {\n//     dots: true,\n//     speed: 500,\n//     slidesToShow: 1,\n//   };\n//   const next = () => {\n//     ref.current.slickPrev();\n//   };\n//   const prev = () => {\n//     ref.current.slickNext();\n//   };\n\n//   const { openGallery } = useLightgallery();\n//   return (\n//     <>\n//       <Slider {...settings} className={classes.slider} ref={ref}>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={image}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={img}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         <div>\n//           <img\n//             className={classes.imgpopup}\n//             src={img2}\n//             {...props}\n//             onClick={() => openGallery(\"item1\")}\n//           ></img>\n//         </div>\n//         {/* <OpenGallery222 classes={classes.imgpopup} image={image} /> */}\n//       </Slider>\n//       <div className={classes.slidebutton}>\n//         <div className={classes.next} onClick={() => next()}>\n//           <NavigateBeforeIcon className={classes.iconbutton} />\n//         </div>\n//         <div className={classes.prev} onClick={() => prev()}>\n//           <NavigateNextIcon className={classes.iconbutton} />\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\nfunction MapViolation(props) {\n  const ref = useRef({});\n  const lightbox = useRef();\n  const classes = useStyles();\n  const [map, setMap] = useState(null);\n  const [infoWindowShape, setInfoWindowShape] = useState(null);\n  // useEffect(() => {\n  //   let value = props.noParking.filter((data) => data.id === props.Infowindow.id);\n  //   console.log(value);\n\n  //   if (value.length) {\n  //     let e = { ...value[0] };\n  //     console.log(e);\n\n  //     if (e.path.length % 2 !== 0) {\n  //       let index = Math.ceil(e.path.length / 2);\n  //       e.latLng = e.path[index];\n  //     } else {\n  //       let pointFirst;\n  //       let pointLast;\n  //       if (e.path.length < 3) {\n  //         pointFirst = e.path[0];\n  //         pointLast = e.path[1];\n  //       } else {\n  //         let i = e.path.length / 2;\n  //         pointFirst = e.path[i];\n  //         pointLast = e.path[i + 1];\n  //       }\n  //       let lat = (pointFirst.lat + pointLast.lat) / 2;\n  //       let lng = (pointFirst.lng + pointLast.lng) / 2;\n\n  //       e.latLng = { lat, lng };\n  //     }\n  //     console.log(e);\n\n  //     showInfoWindowShape(e);\n  //   }\n  // }, [props.Infowindow]);\n  // const { openGallery } = useLightgallery();\n  // const clearInfoWindow = () => {\n  //   if (infoWindowShape) {\n  //     infoWindowShape.open(null);\n  //   }\n  // };\n  // const handleClose = () => {\n  //   setOpendialog(false);\n  // };\n  // const next = () => {\n  //   ref.current.slickPrev();\n  // };\n  // const prev = () => {\n  //   ref.current.slickNext();\n  // };\n\n  // const showInfoWindowShape = (e) => {\n  //   clearInfoWindow();\n  //   const settings = {\n  //     dots: true,\n  //     speed: 500,\n  //     slidesToShow: 1,\n  //   };\n  //   // const { openGallery } = useLightgallery();\n  //   // const { openGallery } = useLightgallery();\n  //   const slide = (\n  //     <React.Fragment>\n  //       <LightgalleryProvider>\n  //         {images.map((item) => (\n  //           // <LightgalleryItem image={item}></LightgalleryItem>\n  //           <div\n  //             styles={{\n  //               maxWidth: \"250px\",\n  //               width: \"100px\",\n  //               padding: \"5px\",\n  //             }}\n  //           >\n  //             <LightgalleryItem group=\"item1\" src={item}>\n  //               {/* <img src={item} style={{ width: \"100%\" }} /> */}\n  //             </LightgalleryItem>\n  //           </div>\n  //         ))}\n  //         <div\n  //           onMouseOver={() => {\n  //             setOpacity(1);\n  //           }}\n  //           onMouseOut={() => {\n  //             setOpacity(0);\n  //           }}\n  //           className={classes.slidercontent}\n  //           id=\"slider\"\n  //         >\n  //           <OpenButtonWithHook />\n  //         </div>\n  //       </LightgalleryProvider>\n  //     </React.Fragment>\n  //   );\n  //   // const button = (\n  //   //   <React.Fragment>\n  //   //     <div onClick={() => dialogtable()} id=\"button\">\n  //   //       <Button\n  //   //         variant=\"outlined\"\n  //   //         color=\"primary\"\n  //   //         className={classes.infotitlepopup}\n  //   //       >\n  //   //         chi tiáº¿t <SendIcon className={classes.icon} />\n  //   //       </Button>\n  //   //     </div>\n  //   //   </React.Fragment>\n  //   // );\n  //   const Popup = <CustomInfoWindow info={e} />;\n  //   let infoWindow = new window.google.maps.InfoWindow({\n  //     content: ``,\n  //   });\n\n  //   if (map) {\n  //     let content = ReactDOMServer.renderToString(Popup);\n\n  //     infoWindow.setPosition(e.latLng);\n  //     infoWindow.setContent(content);\n  //     infoWindow.open(map);\n\n  //     window.google.maps.event.addListener(infoWindow, \"domready\", function () {\n  //       ReactDOM.render(\n  //         React.Children.only(slide),\n  //         document.getElementById(\"slide\")\n  //         // document.getElementById(\"button\")\n  //       );\n  //     });\n  //     // window.google.maps.event.addListener(infoWindow, \"domready\", function () {\n  //     //   ReactDOM.render(\n  //     //     React.Children.only(button),\n  //     //     document.getElementById(\"button\")\n  //     //   );\n  //     // });\n  //     setInfoWindowShape(infoWindow);\n  //   }\n  // };\n  // const mapEvent = (ref) => {\n  //   if (ref) {\n  //     setMap(ref.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n  //   }\n  // };\n  const onChangeMapClick = () => {\n    // clearInfoWindow();\n    props.clearInfowindow();\n  };\n  const handleHideBoxNote = () => {\n    props.toggleBoxNote();\n  };\n\n  return (\n    <MapOptions>\n      <GoogleMap\n        onClick={onChangeMapClick}\n        zoom={13}\n        defaultCenter={{ lat: 16.04319399907483, lng: 108.21515312158203 }}\n        // ref={mapEvent}\n        // onClick={(e) => handleMap(e)}\n      >\n        {props.noParking?.length\n          ? props.noParking.map((marker, index) => {\n              return (\n                <ShapeNoparking\n                  marker={marker}\n                  key={index}\n                  id={marker.id}\n                  ref={ref}\n                  handleClose={() => handleClose()}\n                />\n              );\n            })\n          : null}\n        {props.vehicle.data?.length > 0\n          ? props.vehicle.data.map((marker, index) => {\n              // console.log(marker);\n              return (\n                <>\n                  <MarkerComponent\n                    marker={marker}\n                    key={index}\n                    // id={marker.id}\n                    lat={marker.camera.lat}\n                    lng={marker.camera.lng}\n                  />\n                </>\n              );\n            })\n          : null}\n      </GoogleMap>\n      {props.noParking?.length && (\n        <div className={classes.note}>\n          <span\n            className={clsx(classes.toggleNote, {\n              [classes.toggleNoteHide]: !props.openNote,\n            })}\n            onClick={handleHideBoxNote}\n          >\n            {props.openNote ? <ClearIcon /> : <ChevronLeftIcon />}\n          </span>\n          <ul\n            className={clsx({\n              [classes.boxNoteHide]: !props.openNote,\n              [classes.boxNote]: props.openNote,\n            })}\n          >\n            <Typography className={classes.title}>ChÃº thÃ­ch</Typography>\n            {TypeNoParkingOptions.map((data) => {\n              return (\n                <li key={data.id}>\n                  <TimelineIcon style={{ color: data.color }} />\n                  <span>{data.name}</span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </MapOptions>\n  );\n}\nexport default MapViolation;\nconst useStyles = makeStyles(() => ({\n  // slider: {\n  //   width: 450,\n  // },\n  // slidercontent: {\n  //   width: \"100%\",\n  //   position: \"relative\",\n  //   \"&:hover div:last-child\": {\n  //     opacity: 1,\n  //   },\n  // },\n  // slidebutton: {\n  //   transition: \"0.2s\",\n  //   position: \"absolute\",\n  //   top: \"50%\",\n  //   width: \"100%\",\n  //   display: \"flex\",\n  //   justifyContent: \"space-between\",\n  //   opacity: 0,\n  // },\n  // imgpopup: {\n  //   cursor: \"pointer\",\n  //   width: \"450px\",\n  //   height: 300,\n  // },\n  title: {\n    fontWeight: 500,\n    fontFamily: \"Nunito, sans-serif\",\n  },\n  // dialog: {\n  //   height: \"100%\",\n  //   width: \"100%\",\n  // },\n  // imagepopup: {\n  //   width: 350,\n  // },\n  // infotitlepopup: {\n  //   cursor: \"pointer\",\n  //   color: \"#3c16ce\",\n  //   float: \"right\",\n  //   marginTop: \"-40px\",\n  // },\n  // icon: {\n  //   fontSize: 14,\n  //   marginLeft: 5,\n  // },\n  // titlepopup: {\n  //   padding: 20,\n  // },\n  // next: {\n  //   width: 30,\n  //   height: 30,\n  //   borderRadius: \"50%\",\n  //   transition: \"0.5s\",\n  //   color: \"black\",\n  //   cursor: \"pointer\",\n  //   border: \"none\",\n  //   backgroundColor: \"white\",\n  // },\n  // prev: {\n  //   width: 30,\n  //   height: 30,\n  //   borderRadius: \"50%\",\n  //   transition: \"0.5s\",\n  //   color: \"black\",\n  //   border: \"none\",\n  //   cursor: \"pointer\",\n  //   backgroundColor: \"white\",\n  // },\n  // iconbutton: {\n  //   marginTop: 2,\n  //   marginLeft: 2,\n  // },\n  // font: {\n  //   fontFamily: \"Nunito, sans-serif\",\n  // },\n  //note\n  note: {\n    position: \"absolute\",\n    top: \"50%\",\n    right: 10,\n    transform: \"translateY(-50%)\",\n    \"& ul\": {\n      padding: 10,\n      listStyle: \"none\",\n      margin: 0,\n      background: \"#fafafa\",\n      transition: \".3s ease-in-out\",\n      borderRadius: 4,\n      position: \"relative\",\n      boxShadow:\n        \"0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\n      \"& li\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        lineHeight: \"35px\",\n        \"& span\": {\n          marginLeft: 8,\n        },\n      },\n    },\n  },\n  toggleNote: {\n    background: \"#fafafa\",\n    position: \"absolute\",\n    top: 4,\n    right: 4,\n    width: 40,\n    height: 40,\n    textAlign: \"center\",\n    color: \"grey\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    zIndex: 1,\n    alignItems: \"center\",\n    borderRadius: \"50%\",\n  },\n  toggleNoteHide: {\n    boxShadow: \"-1px -5px 5px #504e4e57\",\n  },\n  boxNoteHide: {\n    display: \"none\",\n  },\n\n  boxNote: {\n    display: \"block\",\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}