{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Client } from '../../../client';\nimport * as actions from './parking';\nexport var getDataNoParking = function getDataNoParking() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actions.getDataParkingRequest());\n              _context.prev = 1;\n              _context.next = 4;\n              return Client.getParking();\n\n            case 4:\n              data = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(actions.getDataParkingFailure(_context.t0));\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 11:\n              return _context.abrupt(\"return\", dispatch(actions.getDataParkingSuccess(data)));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}