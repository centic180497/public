{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport _ from \"lodash\";\nconst HEADER_AUTH = \"Authorization\";\nconst HEADER_BEARER = \"BEARER\";\nexport default class Client {\n  constructor() {\n    _defineProperty(this, \"token\", \"\");\n\n    _defineProperty(this, \"url\", \"http://103.101.76.162:9002\");\n\n    _defineProperty(this, \"urlPolitical\", \"http://103.101.76.162:9002\");\n\n    _defineProperty(this, \"urlVersion\", \"/api/v1\");\n\n    _defineProperty(this, \"urlSearchViolations\", \"http://103.101.76.162:9005\");\n\n    _defineProperty(this, \"defaultHeaders\", {});\n\n    _defineProperty(this, \"userId\", \"\");\n\n    _defineProperty(this, \"userRole\", void 0);\n\n    _defineProperty(this, \"login\", (username, password) => {});\n\n    _defineProperty(this, \"logout\", () => {});\n\n    _defineProperty(this, \"getSearchViolation\", async value => {\n      console.log({\n        value\n      });\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getBaseRouteSearchViolation()}/violations/search`, {\n        method: \"post\",\n        data: {\n          plate: !_.isEmpty(value) ? value.plate : value,\n          page: value.page\n        }\n      }); // console.log(data);\n\n      return data;\n    });\n\n    _defineProperty(this, \"getProvinces\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/provinces`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDistricts\", async code => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/districts?province=${code}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getCommunes\", async code => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/communes?district=${code}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDataNoParking\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDataNoParkingDetail\", async id => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, {\n        method: \"get\",\n        data: {\n          id\n        }\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"addOneNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, {\n        method: \"post\",\n        data: _objectSpread({}, payload)\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"updateOneNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(payload.id)}`, {\n        method: \"put\",\n        data: _objectSpread({}, payload)\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"deleteOneNoParking\", async id => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, {\n        method: \"delete\",\n        data: {\n          id\n        }\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"searchParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getParkingRoute()}?district=${payload.district}&commune=${payload.commune}&type=${payload.type}&query=${payload.q}&fee=${payload.fee}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"searchNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}?type=${payload.type}&query=${payload.q}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getParking\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getParkingRoute()}`, {\n        method: \"get\",\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"doFetch\", async (url, options) => {\n      const {\n        data\n      } = await this.doFetchWithResponse(url, options);\n      return data;\n    });\n\n    _defineProperty(this, \"doFetchWithResponse\", async (url, options) => {\n      try {\n        const response = await axios(_objectSpread({\n          url: url\n        }, this.getOptions(options)));\n        const {\n          data,\n          headers\n        } = response;\n        return {\n          data,\n          headers\n        };\n      } catch (error) {\n        return error.messages;\n      }\n    });\n  }\n\n  getUrl() {\n    return this.url;\n  }\n\n  setUrl(url) {\n    this.url = url;\n  }\n\n  getUrlVersion() {\n    return this.urlVersion;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  setToken(token) {\n    this.token = token;\n  }\n\n  setUserId(userId) {\n    this.userId = userId;\n  }\n\n  setUserRole(userRole) {\n    this.userRole = userRole;\n  }\n\n  getBaseRoute() {\n    return `${this.url}${this.urlVersion}`;\n  }\n\n  getBaseRoutePolitical() {\n    return `${this.urlPolitical}${this.urlVersion}`;\n  } //searchViolation\n\n\n  getBaseRouteSearchViolation() {\n    return `${this.urlSearchViolations}${this.urlVersion}`;\n  } //endsearch\n\n\n  getUsersRoute() {\n    return `${this.getBaseRoute()}/users`;\n  }\n\n  getParkingRoute() {\n    return `${this.getBaseRoute()}/parking`;\n  }\n\n  getNoParkingRoute() {\n    return `${this.getBaseRoute()}/no_parking`;\n  }\n\n  getPolitical() {\n    return `${this.getBaseRoutePolitical()}/political`;\n  }\n\n  getDetailNoParking(id) {\n    return `${this.getBaseRoute()}/no_parking/${id}`;\n  }\n\n  getOptions(options) {\n    const newOptions = _objectSpread({}, options);\n\n    let headers = _objectSpread({}, this.defaultHeaders);\n\n    if (options.headers) {\n      headers = _objectSpread(_objectSpread({}, headers), options.headers);\n    }\n\n    if (this.token) {\n      headers[HEADER_AUTH] = `${HEADER_BEARER} ${this.token}`;\n    }\n\n    return _objectSpread(_objectSpread({}, newOptions), {}, {\n      headers\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/client/client.ts"],"names":["axios","_","HEADER_AUTH","HEADER_BEARER","Client","username","password","value","console","log","data","doFetchWithResponse","getBaseRouteSearchViolation","method","plate","isEmpty","page","getPolitical","code","getNoParkingRoute","id","getDetailNoParking","payload","getParkingRoute","district","commune","type","q","fee","url","options","response","getOptions","headers","error","messages","getUrl","setUrl","getUrlVersion","urlVersion","getToken","token","setToken","setUserId","userId","setUserRole","userRole","getBaseRoute","getBaseRoutePolitical","urlPolitical","urlSearchViolations","getUsersRoute","newOptions","defaultHeaders"],"mappings":"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","sourcesContent":["import { Options } from \"../types/client\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nconst HEADER_AUTH = \"Authorization\";\r\nconst HEADER_BEARER = \"BEARER\";\r\n\r\nexport default class Client {\r\n  token = \"\";\r\n  url = \"http://103.101.76.162:9002\";\r\n  urlPolitical = \"http://103.101.76.162:9002\";\r\n  urlVersion = \"/api/v1\";\r\n  urlSearchViolations = \"http://103.101.76.162:9005\";\r\n  defaultHeaders: { [x: string]: string } = {};\r\n  userId = \"\";\r\n  userRole?: string;\r\n\r\n  getUrl() {\r\n    return this.url;\r\n  }\r\n\r\n  setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  getUrlVersion() {\r\n    return this.urlVersion;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  setUserId(userId: string) {\r\n    this.userId = userId;\r\n  }\r\n\r\n  setUserRole(userRole: string) {\r\n    this.userRole = userRole;\r\n  }\r\n\r\n  getBaseRoute() {\r\n    return `${this.url}${this.urlVersion}`;\r\n  }\r\n\r\n  getBaseRoutePolitical() {\r\n    return `${this.urlPolitical}${this.urlVersion}`;\r\n  }\r\n  //searchViolation\r\n  getBaseRouteSearchViolation() {\r\n    return `${this.urlSearchViolations}${this.urlVersion}`;\r\n  }\r\n  //endsearch\r\n  getUsersRoute() {\r\n    return `${this.getBaseRoute()}/users`;\r\n  }\r\n\r\n  getParkingRoute() {\r\n    return `${this.getBaseRoute()}/parking`;\r\n  }\r\n\r\n  getNoParkingRoute() {\r\n    return `${this.getBaseRoute()}/no_parking`;\r\n  }\r\n\r\n  getPolitical() {\r\n    return `${this.getBaseRoutePolitical()}/political`;\r\n  }\r\n\r\n  getDetailNoParking(id: string) {\r\n    return `${this.getBaseRoute()}/no_parking/${id}`;\r\n  }\r\n\r\n  getOptions(options: Options) {\r\n    const newOptions = { ...options };\r\n    let headers = { ...this.defaultHeaders };\r\n\r\n    if (options.headers) {\r\n      headers = { ...headers, ...options.headers };\r\n    }\r\n\r\n    if (this.token) {\r\n      headers[HEADER_AUTH] = `${HEADER_BEARER} ${this.token}`;\r\n    }\r\n\r\n    return { ...newOptions, headers };\r\n  }\r\n\r\n  login = (username: string, password: string) => {};\r\n\r\n  logout = () => {};\r\n  //searchViolation\r\n  getSearchViolation = async (value: any) => {\r\n    console.log({ value });\r\n\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getBaseRouteSearchViolation()}/violations/search`,\r\n      {\r\n        method: \"post\",\r\n        data: {\r\n          plate: !_.isEmpty(value) ? value.plate : value,\r\n          page: value.page,\r\n        },\r\n      }\r\n    );\r\n    // console.log(data);\r\n    return data;\r\n  };\r\n  ///endSearch\r\n  getProvinces = async () => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getPolitical()}/provinces`,\r\n      {\r\n        method: \"get\",\r\n        data: {},\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  getDistricts = async (code: string) => {\r\n    const {\r\n      data,\r\n    } = await this.doFetchWithResponse(\r\n      `${this.getPolitical()}/districts?province=${code}`,\r\n      { method: \"get\", data: {} }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  getCommunes = async (code: string) => {\r\n    const {\r\n      data,\r\n    } = await this.doFetchWithResponse(\r\n      `${this.getPolitical()}/communes?district=${code}`,\r\n      { method: \"get\", data: {} }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  // manage noParking\r\n  getDataNoParking = async () => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getNoParkingRoute()}`,\r\n      {\r\n        method: \"get\",\r\n        data: {},\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  getDataNoParkingDetail = async (id: string) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getDetailNoParking(id)}`,\r\n      { method: \"get\", data: { id } }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  addOneNoParking = async (payload: object) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getNoParkingRoute()}`,\r\n      {\r\n        method: \"post\",\r\n        data: { ...payload },\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  updateOneNoParking = async (payload: any) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getDetailNoParking(payload.id)}`,\r\n      { method: \"put\", data: { ...payload } }\r\n    );\r\n\r\n    return data;\r\n  };\r\n\r\n  deleteOneNoParking = async (id: string) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getDetailNoParking(id)}`,\r\n      { method: \"delete\", data: { id } }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  searchParking = async (payload: any) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getParkingRoute()}?district=${payload.district}&commune=${\r\n        payload.commune\r\n      }&type=${payload.type}&query=${payload.q}&fee=${payload.fee}`,\r\n      {\r\n        method: \"get\",\r\n        data: {},\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  searchNoParking = async (payload: any) => {\r\n    const { data } = await this.doFetchWithResponse(\r\n      `${this.getNoParkingRoute()}?type=${payload.type}&query=${payload.q}`,\r\n      {\r\n        method: \"get\",\r\n        data: {},\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n  // end manage noParking\r\n\r\n  getParking = async () => {\r\n    const { data }: any = await this.doFetchWithResponse(\r\n      `${this.getParkingRoute()}`,\r\n      {\r\n        method: \"get\",\r\n        data: {},\r\n      }\r\n    );\r\n    return data;\r\n  };\r\n\r\n  doFetch = async (url: string, options: Options) => {\r\n    const { data } = await this.doFetchWithResponse(url, options);\r\n    return data;\r\n  };\r\n\r\n  doFetchWithResponse = async (url: string, options: Options) => {\r\n    try {\r\n      const response = await axios({ url: url, ...this.getOptions(options) });\r\n\r\n      const { data, headers } = response;\r\n\r\n      return { data, headers };\r\n    } catch (error) {\r\n      return error.messages;\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}