{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx\";\nimport React, { useRef } from \"react\";\nimport { Polyline, Circle, Polygon, InfoWindow } from \"react-google-maps\";\nimport Infowindow from '../custominfowindow';\n\nfunction ShapeNoparking(props) {\n  // console.log(props.marker);\n  const onLoad = e => {\n    console.log('polyline: ', e);\n  }; //   const ref =useRef()\n  //   console.log(\"rewfs\",ref);\n\n\n  const showInfoWindowShape = (e, value) => {\n    const Popup = /*#__PURE__*/_jsxDEV(InfoWindow, {\n      info: value,\n      type: TypeClickConst.shape\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this);\n\n    let infoWindow = new window.google.maps.InfoWindow({\n      content: ``\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Polyline //   onLoad={onLoad}\n    //   ref={ref}\n    //   path={}\n    // key={noParking.id}\n    , {\n      path: props.marker.path // options={{\n      //   strokeColor:\n      //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n      //     noParking.color,\n      //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n      // }}\n      // ref={detailNoParking?.id === noParking.id ? shapeRef : null}\n      // editable={detailNoParking?.id === noParking.id}\n      // onMouseUp={\n      //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n      // }\n      // onClick={(e, value) => handleShapeClick(e, noParking)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), props.InfoWindow === props.marker.lat && props.InfoWindow === props.marker.lng ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n      marker: props.marker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ShapeNoparking;","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx"],"names":["React","useRef","Polyline","Circle","Polygon","InfoWindow","Infowindow","ShapeNoparking","props","onLoad","e","console","log","showInfoWindowShape","value","Popup","TypeClickConst","shape","infoWindow","window","google","maps","content","marker","path","lat","lng"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAmCC,UAAnC,QAAqD,mBAArD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B;AACA,QAAMC,MAAM,GAAGC,CAAC,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,CAA1B;AACD,GAFH,CAF2B,CAK3B;AACA;;;AAEF,QAAMG,mBAAmB,GAAG,CAACH,CAAD,EAAII,KAAJ,KAAc;AACxC,UAAMC,KAAK,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,KAAlB;AAAyB,MAAA,IAAI,EAAEE,cAAc,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAd;;AACA,QAAIC,UAAU,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBhB,UAAvB,CAAkC;AAC/CiB,MAAAA,OAAO,EAAG;AADqC,KAAlC,CAAjB;AAGH,GALC;;AAMA,sBACE;AAAA,4BACE,QAAC,QAAD,CACE;AACA;AACJ;AACI;AAJF;AAKE,MAAA,IAAI,EAAEd,KAAK,CAACe,MAAN,CAAaC,IALrB,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBF;AAAA;AAAA;AAAA;AAAA,YADF,EAqBMhB,KAAK,CAACH,UAAN,KAAmBG,KAAK,CAACe,MAAN,CAAaE,GAAhC,IAAsCjB,KAAK,CAACH,UAAN,KAAmBG,KAAK,CAACe,MAAN,CAAaG,GAAtE,gBACE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAElB,KAAK,CAACe;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,GAEE,IAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;AACD,eAAehB,cAAf","sourcesContent":["import React,{useRef} from \"react\";\nimport { Polyline, Circle, Polygon,InfoWindow } from \"react-google-maps\";\nimport Infowindow from '../custominfowindow'\nfunction ShapeNoparking(props) {\n    // console.log(props.marker);\n    const onLoad = e => {\n        console.log('polyline: ', e)\n      };\n    //   const ref =useRef()\n    //   console.log(\"rewfs\",ref);\n    \n  const showInfoWindowShape = (e, value) => {\n    const Popup = <InfoWindow info={value} type={TypeClickConst.shape} />\n    let infoWindow = new window.google.maps.InfoWindow({\n        content: ``,\n    })\n}\n  return (\n    <div>\n      <Polyline\n        //   onLoad={onLoad}\n        //   ref={ref}\n    //   path={}\n        // key={noParking.id}\n        path={props.marker.path}\n        // options={{\n        //   strokeColor:\n        //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n        //     noParking.color,\n        //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n        // }}\n        // ref={detailNoParking?.id === noParking.id ? shapeRef : null}\n        // editable={detailNoParking?.id === noParking.id}\n        // onMouseUp={\n        //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n        // }\n        // onClick={(e, value) => handleShapeClick(e, noParking)}\n      />\n      {\n          props.InfoWindow===props.marker.lat&& props.InfoWindow===props.marker.lng?(\n            <InfoWindow marker={props.marker} />\n          ):null\n      }\n      {/* <InfoWindow position=>\n          <p>nhfishd</p>\n      </InfoWindow> */}\n    </div>\n  );\n}\nexport default ShapeNoparking;\n"]},"metadata":{},"sourceType":"module"}