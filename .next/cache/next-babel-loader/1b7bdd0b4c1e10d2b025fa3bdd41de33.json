{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from '../../action_types/search_violation';\nconst INITIAL_STATE = {\n  showInfowindow: {\n    id: null,\n    info: null\n  }\n};\n\nconst reducer_search_violation = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SHOW_INFOWINDOW_VIOLATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showInfowindow: {\n          id: action.payload.id,\n          info: action.payload\n        }\n      });\n\n    case types.CLEAR_INFOWINDOW_VIOLATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showInfowindow: {\n          id: null\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer_search_violation;","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/redux/reducers/violation/index.js"],"names":["types","INITIAL_STATE","showInfowindow","id","info","reducer_search_violation","state","action","type","SHOW_INFOWINDOW_VIOLATION","payload","CLEAR_INFOWINDOW_VIOLATION"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,qCAAvB;AACA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,cAAc,EAAC;AACXC,IAAAA,EAAE,EAAC,IADQ;AAEXC,IAAAA,IAAI,EAAC;AAFM;AADC,CAApB;;AAMC,MAAMC,wBAAwB,GAAC,CAACC,KAAK,GAACL,aAAP,EAAqBM,MAArB,KAA8B;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,yBAAX;AAEI,6CACOH,KADP;AAEIJ,QAAAA,cAAc,EAAC;AACXC,UAAAA,EAAE,EAACI,MAAM,CAACG,OAAP,CAAeP,EADP;AAEXC,UAAAA,IAAI,EAACG,MAAM,CAACG;AAFD;AAFnB;;AAOJ,SAAKV,KAAK,CAACW,0BAAX;AACI,6CACOL,KADP;AAEIJ,QAAAA,cAAc,EAAC;AACXC,UAAAA,EAAE,EAAC;AADQ;AAFnB;;AAMJ;AACI,aAAOG,KAAP;AAlBR;AAoBH,CArBA;;AAsBD,eAAgBD,wBAAhB","sourcesContent":["import * as types from '../../action_types/search_violation'\nconst INITIAL_STATE={\n    showInfowindow:{\n        id:null,\n        info:null\n    }\n}\n const reducer_search_violation=(state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case types.SHOW_INFOWINDOW_VIOLATION:\n\n            return{\n                ...state,\n                showInfowindow:{\n                    id:action.payload.id,\n                    info:action.payload\n                }\n            }\n        case types.CLEAR_INFOWINDOW_VIOLATION:\n            return{\n                ...state,\n                showInfowindow:{\n                    id:null,\n                }\n            }\n        default:\n            return state\n    }\n}\nexport default  reducer_search_violation"]},"metadata":{},"sourceType":"module"}