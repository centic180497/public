{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import * as types from \"../../action_types\";\nimport api from './api';\nimport { combineReducers } from \"redux\";\nconst INITIAL_STATE = {\n  showInfowindow: {\n    id: null,\n    info: null\n  }\n};\n\nconst reducer_search_violation = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SHOW_INFOWINDOW_VIOLATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showInfowindow: {\n          id: action.payload.id,\n          info: action.payload\n        }\n      });\n\n    case types.CLEAR_INFOWINDOW_VIOLATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showInfowindow: {\n          id: null\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  api,\n  reducer_search_violation\n});","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/redux/reducers/violation/index.js"],"names":["api","combineReducers","INITIAL_STATE","showInfowindow","id","info","reducer_search_violation","state","action","type","types","SHOW_INFOWINDOW_VIOLATION","payload","CLEAR_INFOWINDOW_VIOLATION"],"mappings":";;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,EAAE,EAAE,IADU;AAEdC,IAAAA,IAAI,EAAE;AAFQ;AADI,CAAtB;;AAMA,MAAMC,wBAAwB,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,KAAK,CAACC,yBAAX;AACE,6CACKJ,KADL;AAEEJ,QAAAA,cAAc,EAAE;AACdC,UAAAA,EAAE,EAAEI,MAAM,CAACI,OAAP,CAAeR,EADL;AAEdC,UAAAA,IAAI,EAAEG,MAAM,CAACI;AAFC;AAFlB;;AAOF,SAAKF,KAAK,CAACG,0BAAX;AACE,6CACKN,KADL;AAEEJ,QAAAA,cAAc,EAAE;AACdC,UAAAA,EAAE,EAAE;AADU;AAFlB;;AAMF;AACE,aAAOG,KAAP;AAjBJ;AAmBD,CApBD;;AAqBA,eAAeN,eAAe,CAAC;AAACD,EAAAA,GAAD;AAAKM,EAAAA;AAAL,CAAD,CAA9B","sourcesContent":["// import * as types from \"../../action_types\";\nimport api from './api'\nimport { combineReducers } from \"redux\";\nconst INITIAL_STATE = {\n  showInfowindow: {\n    id: null,\n    info: null,\n  },\n};\nconst reducer_search_violation = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.SHOW_INFOWINDOW_VIOLATION:\n      return {\n        ...state,\n        showInfowindow: {\n          id: action.payload.id,\n          info: action.payload,\n        },\n      };\n    case types.CLEAR_INFOWINDOW_VIOLATION:\n      return {\n        ...state,\n        showInfowindow: {\n          id: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\nexport default combineReducers({api,reducer_search_violation});\n"]},"metadata":{},"sourceType":"module"}