{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Polyline, Circle, Polygon, InfoWindow } from \"react-google-maps\";\n\nfunction ShapeNoparking(props) {\n  _s();\n\n  // console.log(props.marker);\n  var onLoad = function onLoad(e) {\n    console.log('polyline: ', e);\n  };\n\n  var ref = useRef();\n  console.log(\"rewfs\", ref);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Polyline, {\n      onLoad: onLoad,\n      ref: ref //   path={}\n      // key={noParking.id}\n      ,\n      path: props.marker.path // options={{\n      //   strokeColor:\n      //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n      //     noParking.color,\n      //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n      // }}\n      // ref={detailNoParking?.id === noParking.id ? shapeRef : null}\n      // editable={detailNoParking?.id === noParking.id}\n      // onMouseUp={\n      //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n      // }\n      // onClick={(e, value) => handleShapeClick(e, noParking)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShapeNoparking, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = ShapeNoparking;\nexport default ShapeNoparking;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShapeNoparking\");","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx"],"names":["React","useRef","Polyline","Circle","Polygon","InfoWindow","ShapeNoparking","props","onLoad","e","console","log","ref","marker","path"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,MAAd,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAmCC,UAAnC,QAAqD,mBAArD;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,CAAC,EAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,CAA1B;AACD,GAFH;;AAGE,MAAMG,GAAG,GAAEX,MAAM,EAAjB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBC,GAApB;AAEJ,sBACE;AAAA,2BACE,QAAC,QAAD;AACI,MAAA,MAAM,EAAEJ,MADZ;AAEI,MAAA,GAAG,EAAEI,GAFT,CAGF;AACI;AAJF;AAKE,MAAA,IAAI,EAAEL,KAAK,CAACM,MAAN,CAAaC,IALrB,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAlCQR,c;;KAAAA,c;AAmCT,eAAeA,cAAf","sourcesContent":["import React,{useRef} from \"react\";\nimport { Polyline, Circle, Polygon,InfoWindow } from \"react-google-maps\";\nfunction ShapeNoparking(props) {\n    // console.log(props.marker);\n    const onLoad = e => {\n        console.log('polyline: ', e)\n      };\n      const ref =useRef()\n      console.log(\"rewfs\",ref);\n      \n  return (\n    <div>\n      <Polyline\n          onLoad={onLoad}\n          ref={ref}\n    //   path={}\n        // key={noParking.id}\n        path={props.marker.path}\n        // options={{\n        //   strokeColor:\n        //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n        //     noParking.color,\n        //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n        // }}\n        // ref={detailNoParking?.id === noParking.id ? shapeRef : null}\n        // editable={detailNoParking?.id === noParking.id}\n        // onMouseUp={\n        //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n        // }\n        // onClick={(e, value) => handleShapeClick(e, noParking)}\n      />\n      {/* <InfoWindow position=>\n          <p>nhfishd</p>\n      </InfoWindow> */}\n    </div>\n  );\n}\nexport default ShapeNoparking;\n"]},"metadata":{},"sourceType":"module"}