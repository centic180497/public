{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx\";\nimport React, { useRef } from \"react\";\nimport { Polyline, Circle, Polygon, InfoWindow } from \"react-google-maps\";\nimport Infowindow from '../custominfowindow';\n\nfunction ShapeNoparking(props) {\n  // console.log(props.Infowindow);\n  // const onLoad = e => {\n  //     console.log('polyline: ', e)\n  //   };\n  //   const ref =useRef()\n  //   console.log(\"rewfs\",ref);\n  //   const showInfoWindowShape = (e, value) => {\n  //       console.log(\"fjksdhf\",e);\n  //     const Popup = <InfoWindow />\n  //     let infoWindow = new window.google.maps.InfoWindow({\n  //         content: Popup,\n  //     })\n  //     infoWindow.open()\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Polyline //   onLoad={onLoad}\n    //   ref={ref}\n    //   path={}\n    // key={noParking.id}\n    , {\n      path: props.marker.path // options={{\n      //   strokeColor:\n      //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n      //     noParking.color,\n      //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n      // }}\n      // ref={props.Infowindow?.lat === props.marker.lat ? showInfoWindowShape : null}\n      // editable={detailNoParking?.id === noParking.id}\n      // onMouseUp={\n      //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n      // }\n      // onClick={(e, value) => handleShapeClick(e, noParking)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ShapeNoparking;\nexport default ShapeNoparking;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShapeNoparking\");","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/pages/violation/googlemap_violation/marker/shape_noparking.jsx"],"names":["React","useRef","Polyline","Circle","Polygon","InfoWindow","Infowindow","ShapeNoparking","props","marker","path"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAmCC,UAAnC,QAAqD,mBAArD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE3B;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACE,sBACE;AAAA,2BACE,QAAC,QAAD,CACE;AACA;AACJ;AACI;AAJF;AAKE,MAAA,IAAI,EAAEA,KAAK,CAACC,MAAN,CAAaC,IALrB,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KAzCQH,c;AA0CT,eAAeA,cAAf","sourcesContent":["import React,{useRef} from \"react\";\nimport { Polyline, Circle, Polygon,InfoWindow } from \"react-google-maps\";\nimport Infowindow from '../custominfowindow'\nfunction ShapeNoparking(props) {\n    \n    // console.log(props.Infowindow);\n    // const onLoad = e => {\n    //     console.log('polyline: ', e)\n    //   };\n    //   const ref =useRef()\n    //   console.log(\"rewfs\",ref);\n    \n//   const showInfoWindowShape = (e, value) => {\n//       console.log(\"fjksdhf\",e);\n      \n//     const Popup = <InfoWindow />\n//     let infoWindow = new window.google.maps.InfoWindow({\n//         content: Popup,\n//     })\n//     infoWindow.open()\n// }\n  return (\n    <div>\n      <Polyline\n        //   onLoad={onLoad}\n        //   ref={ref}\n    //   path={}\n        // key={noParking.id}\n        path={props.marker.path}\n        // options={{\n        //   strokeColor:\n        //     (detailNoParking?.id === noParking.id && optionsTypeDraw?.color) ||\n        //     noParking.color,\n        //   strokeWeight: detailNoParking?.id === noParking.id ? 5 : 3,\n        // }}\n        // ref={props.Infowindow?.lat === props.marker.lat ? showInfoWindowShape : null}\n        // editable={detailNoParking?.id === noParking.id}\n        // onMouseUp={\n        //   detailNoParking?.id === noParking.id ? handleUpdatePathShape : null\n        // }\n        // onClick={(e, value) => handleShapeClick(e, noParking)}\n      />\n    </div>\n  );\n}\nexport default ShapeNoparking;\n"]},"metadata":{},"sourceType":"module"}