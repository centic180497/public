{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nconst HEADER_AUTH = 'Authorization';\nconst HEADER_BEARER = 'BEARER';\nexport default class Client {\n  constructor() {\n    _defineProperty(this, \"token\", '');\n\n    _defineProperty(this, \"url\", 'http://103.101.76.162:9002');\n\n    _defineProperty(this, \"urlPolitical\", 'http://103.101.76.162:9002');\n\n    _defineProperty(this, \"urlVersion\", '/api/v1');\n\n    _defineProperty(this, \"urlSearchViolations\", 'http://103.101.76.162:9005');\n\n    _defineProperty(this, \"defaultHeaders\", {});\n\n    _defineProperty(this, \"userId\", '');\n\n    _defineProperty(this, \"userRole\", void 0);\n\n    _defineProperty(this, \"login\", (username, password) => {});\n\n    _defineProperty(this, \"logout\", () => {});\n\n    _defineProperty(this, \"getSearchViolation\", async plate => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getBaseRouteSearchViolation()}/violations/search?plate=${plate}&page=${1}`, {\n        method: 'post',\n        data: {\n          plate\n        }\n      });\n      console.log(data);\n      return data;\n    });\n\n    _defineProperty(this, \"getProvinces\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/provinces`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDistricts\", async code => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/districts?province=${code}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getCommunes\", async code => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getPolitical()}/communes?district=${code}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDataNoParking\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getDataNoParkingDetail\", async id => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, {\n        method: 'get',\n        data: {\n          id\n        }\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"addOneNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, {\n        method: 'post',\n        data: _objectSpread({}, payload)\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"updateOneNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(payload.id)}`, {\n        method: 'put',\n        data: _objectSpread({}, payload)\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"deleteOneNoParking\", async id => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, {\n        method: 'delete',\n        data: {\n          id\n        }\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"searchParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getParkingRoute()}?district=${payload.district}&commune=${payload.commune}&type=${payload.type}&query=${payload.q}&fee=${payload.fee}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"searchNoParking\", async payload => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}?type=${payload.type}&query=${payload.q}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"getParking\", async () => {\n      const {\n        data\n      } = await this.doFetchWithResponse(`${this.getParkingRoute()}`, {\n        method: 'get',\n        data: {}\n      });\n      return data;\n    });\n\n    _defineProperty(this, \"doFetch\", async (url, options) => {\n      const {\n        data\n      } = await this.doFetchWithResponse(url, options);\n      return data;\n    });\n\n    _defineProperty(this, \"doFetchWithResponse\", async (url, options) => {\n      try {\n        const response = await axios(_objectSpread({\n          url: url\n        }, this.getOptions(options)));\n        const {\n          data,\n          headers\n        } = response;\n        return {\n          data,\n          headers\n        };\n      } catch (error) {\n        return error.messages;\n      }\n    });\n  }\n\n  getUrl() {\n    return this.url;\n  }\n\n  setUrl(url) {\n    this.url = url;\n  }\n\n  getUrlVersion() {\n    return this.urlVersion;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  setToken(token) {\n    this.token = token;\n  }\n\n  setUserId(userId) {\n    this.userId = userId;\n  }\n\n  setUserRole(userRole) {\n    this.userRole = userRole;\n  }\n\n  getBaseRoute() {\n    return `${this.url}${this.urlVersion}`;\n  }\n\n  getBaseRoutePolitical() {\n    return `${this.urlPolitical}${this.urlVersion}`;\n  } //searchViolation\n\n\n  getBaseRouteSearchViolation() {\n    return `${this.urlSearchViolations}${this.urlVersion}`;\n  } //endsearch\n\n\n  getUsersRoute() {\n    return `${this.getBaseRoute()}/users`;\n  }\n\n  getParkingRoute() {\n    return `${this.getBaseRoute()}/parking`;\n  }\n\n  getNoParkingRoute() {\n    return `${this.getBaseRoute()}/no_parking`;\n  }\n\n  getPolitical() {\n    return `${this.getBaseRoutePolitical()}/political`;\n  }\n\n  getDetailNoParking(id) {\n    return `${this.getBaseRoute()}/no_parking/${id}`;\n  }\n\n  getOptions(options) {\n    const newOptions = _objectSpread({}, options);\n\n    let headers = _objectSpread({}, this.defaultHeaders);\n\n    if (options.headers) {\n      headers = _objectSpread(_objectSpread({}, headers), options.headers);\n    }\n\n    if (this.token) {\n      headers[HEADER_AUTH] = `${HEADER_BEARER} ${this.token}`;\n    }\n\n    return _objectSpread(_objectSpread({}, newOptions), {}, {\n      headers\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/quy/Videos/parking_webapp/client/client.ts"],"names":["axios","HEADER_AUTH","HEADER_BEARER","Client","username","password","plate","data","doFetchWithResponse","getBaseRouteSearchViolation","method","console","log","getPolitical","code","getNoParkingRoute","id","getDetailNoParking","payload","getParkingRoute","district","commune","type","q","fee","url","options","response","getOptions","headers","error","messages","getUrl","setUrl","getUrlVersion","urlVersion","getToken","token","setToken","setUserId","userId","setUserRole","userRole","getBaseRoute","getBaseRoutePolitical","urlPolitical","urlSearchViolations","getUsersRoute","newOptions","defaultHeaders"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,eAApB;AACA,MAAMC,aAAa,GAAG,QAAtB;AAEA,eAAe,MAAMC,MAAN,CAAa;AAAA;AAAA,mCAChB,EADgB;;AAAA,iCAElB,4BAFkB;;AAAA,0CAGT,4BAHS;;AAAA,wCAIX,SAJW;;AAAA,iDAKJ,4BALI;;AAAA,4CAMkB,EANlB;;AAAA,oCAOf,EAPe;;AAAA;;AAAA,mCAsFhB,CAACC,QAAD,EAAmBC,QAAnB,KAAwC,CAAE,CAtF1B;;AAAA,oCAwFf,MAAM,CAAE,CAxFO;;AAAA,gDA0FL,MAAMC,KAAN,IAAqB;AACpC,YAAM;AAACC,QAAAA;AAAD,UAAO,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKC,2BAAL,EAAmC,4BAA2BH,KAAM,SAAQ,CAAE,EAA1G,EAA4G;AAACI,QAAAA,MAAM,EAAC,MAAR;AAAeH,QAAAA,IAAI,EAAC;AAACD,UAAAA;AAAD;AAApB,OAA5G,CAAnB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aAAOA,IAAP;AACH,KA9FuB;;AAAA,0CAgGT,YAAY;AACvB,YAAM;AAAEA,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKK,YAAL,EAAoB,YAAhD,EAA6D;AAAEH,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAvB,OAA7D,CAAvB;AACA,aAAOA,IAAP;AACH,KAnGuB;;AAAA,0CAqGT,MAAOO,IAAP,IAAwB;AACnC,YAAM;AAAEP,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKK,YAAL,EAAoB,uBAAsBC,IAAK,EAA3E,EAA8E;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAvB,OAA9E,CAAvB;AACA,aAAOA,IAAP;AACH,KAxGuB;;AAAA,yCA0GV,MAAOO,IAAP,IAAwB;AAClC,YAAM;AAAEP,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKK,YAAL,EAAoB,sBAAqBC,IAAK,EAA1E,EAA6E;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAvB,OAA7E,CAAvB;AACA,aAAOA,IAAP;AACH,KA7GuB;;AAAA,8CAgHL,YAAY;AAC3B,YAAM;AAAEA,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKO,iBAAL,EAAyB,EAArD,EAAwD;AAAEL,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAvB,OAAxD,CAAvB;AACA,aAAOA,IAAP;AACH,KAnHuB;;AAAA,oDAqHC,MAAOS,EAAP,IAAsB;AAC3C,YAAM;AAAET,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKS,kBAAL,CAAwBD,EAAxB,CAA4B,EAAxD,EAA2D;AAAEN,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAES,UAAAA;AAAF;AAAvB,OAA3D,CAAvB;AACA,aAAOT,IAAP;AACH,KAxHuB;;AAAA,6CA0HN,MAAOW,OAAP,IAA2B;AAEzC,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKO,iBAAL,EAAyB,EAArD,EAAwD;AAAEL,QAAAA,MAAM,EAAE,MAAV;AAAkBH,QAAAA,IAAI,oBAAOW,OAAP;AAAtB,OAAxD,CAAvB;AACA,aAAOX,IAAP;AACH,KA9HuB;;AAAA,gDAgIH,MAAOW,OAAP,IAAwB;AACzC,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKS,kBAAL,CAAwBC,OAAO,CAACF,EAAhC,CAAoC,EAAhE,EAAmE;AAAEN,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,oBAAOW,OAAP;AAArB,OAAnE,CAAvB;AAEA,aAAOX,IAAP;AACH,KApIuB;;AAAA,gDAsIH,MAAOS,EAAP,IAAsB;AACvC,YAAM;AAAET,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKS,kBAAL,CAAwBD,EAAxB,CAA4B,EAAxD,EAA2D;AAAEN,QAAAA,MAAM,EAAE,QAAV;AAAoBH,QAAAA,IAAI,EAAE;AAAES,UAAAA;AAAF;AAA1B,OAA3D,CAAvB;AACA,aAAOT,IAAP;AACH,KAzIuB;;AAAA,2CA2IR,MAAOW,OAAP,IAAwB;AACpC,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAClB,GAAE,KAAKW,eAAL,EAAuB,aAAYD,OAAO,CAACE,QAAS,YAAWF,OAAO,CAACG,OAAQ,SAAQH,OAAO,CAACI,IAAK,UAASJ,OAAO,CAACK,CAAE,QAAOL,OAAO,CAACM,GAAI,EAD1H,EAEnB;AACId,QAAAA,MAAM,EAAE,KADZ;AAEIH,QAAAA,IAAI,EAAE;AAFV,OAFmB,CAAvB;AAOA,aAAOA,IAAP;AACH,KApJuB;;AAAA,6CAsJN,MAAOW,OAAP,IAAwB;AACtC,YAAM;AAAEX,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKO,iBAAL,EAAyB,SAAQG,OAAO,CAACI,IAAK,UAASJ,OAAO,CAACK,CAAE,EAA7F,EAAgG;AACnHb,QAAAA,MAAM,EAAE,KAD2G;AAEnHH,QAAAA,IAAI,EAAE;AAF6G,OAAhG,CAAvB;AAIA,aAAOA,IAAP;AACH,KA5JuB;;AAAA,wCA+JX,YAAY;AACrB,YAAM;AAAEA,QAAAA;AAAF,UAAgB,MAAM,KAAKC,mBAAL,CAA0B,GAAE,KAAKW,eAAL,EAAuB,EAAnD,EAAsD;AAAET,QAAAA,MAAM,EAAE,KAAV;AAAiBH,QAAAA,IAAI,EAAE;AAAvB,OAAtD,CAA5B;AACA,aAAOA,IAAP;AACH,KAlKuB;;AAAA,qCAoKd,OAAOkB,GAAP,EAAoBC,OAApB,KAAyC;AAC/C,YAAM;AAAEnB,QAAAA;AAAF,UAAW,MAAM,KAAKC,mBAAL,CAAyBiB,GAAzB,EAA8BC,OAA9B,CAAvB;AACA,aAAOnB,IAAP;AACH,KAvKuB;;AAAA,iDAyKF,OAAOkB,GAAP,EAAoBC,OAApB,KAAyC;AAC3D,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAM3B,KAAK;AAAGyB,UAAAA,GAAG,EAAEA;AAAR,WAAgB,KAAKG,UAAL,CAAgBF,OAAhB,CAAhB,EAA5B;AAEA,cAAM;AAAEnB,UAAAA,IAAF;AAAQsB,UAAAA;AAAR,YAAoBF,QAA1B;AAEA,eAAO;AAAEpB,UAAAA,IAAF;AAAQsB,UAAAA;AAAR,SAAP;AACH,OAND,CAME,OAAOC,KAAP,EAAc;AACZ,eAAOA,KAAK,CAACC,QAAb;AACH;AACJ,KAnLuB;AAAA;;AAUxBC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKP,GAAZ;AACH;;AAEDQ,EAAAA,MAAM,CAACR,GAAD,EAAc;AAChB,SAAKA,GAAL,GAAWA,GAAX;AACH;;AAEDS,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKC,UAAZ;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKC,KAAZ;AACH;;AAEDC,EAAAA,QAAQ,CAACD,KAAD,EAAgB;AACpB,SAAKA,KAAL,GAAaA,KAAb;AACH;;AAEDE,EAAAA,SAAS,CAACC,MAAD,EAAiB;AACtB,SAAKA,MAAL,GAAcA,MAAd;AACH;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAAmB;AAC1B,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,WAAQ,GAAE,KAAKlB,GAAI,GAAE,KAAKU,UAAW,EAArC;AACH;;AAEDS,EAAAA,qBAAqB,GAAG;AACpB,WAAQ,GAAE,KAAKC,YAAa,GAAE,KAAKV,UAAW,EAA9C;AACH,GA5CuB,CA6CxB;;;AACA1B,EAAAA,2BAA2B,GAAE;AACzB,WAAQ,GAAE,KAAKqC,mBAAoB,GAAE,KAAKX,UAAW,EAArD;AACH,GAhDuB,CAiDxB;;;AACAY,EAAAA,aAAa,GAAG;AACZ,WAAQ,GAAE,KAAKJ,YAAL,EAAoB,QAA9B;AACH;;AAEDxB,EAAAA,eAAe,GAAG;AACd,WAAQ,GAAE,KAAKwB,YAAL,EAAoB,UAA9B;AACH;;AAED5B,EAAAA,iBAAiB,GAAG;AAChB,WAAQ,GAAE,KAAK4B,YAAL,EAAoB,aAA9B;AACH;;AAED9B,EAAAA,YAAY,GAAG;AACX,WAAQ,GAAE,KAAK+B,qBAAL,EAA6B,YAAvC;AACH;;AAED3B,EAAAA,kBAAkB,CAACD,EAAD,EAAa;AAC3B,WAAQ,GAAE,KAAK2B,YAAL,EAAoB,eAAc3B,EAAG,EAA/C;AACH;;AAEDY,EAAAA,UAAU,CAACF,OAAD,EAAmB;AAEzB,UAAMsB,UAAU,qBAAQtB,OAAR,CAAhB;;AACA,QAAIG,OAAO,qBAAQ,KAAKoB,cAAb,CAAX;;AAEA,QAAIvB,OAAO,CAACG,OAAZ,EAAqB;AACjBA,MAAAA,OAAO,mCAAQA,OAAR,GAAoBH,OAAO,CAACG,OAA5B,CAAP;AACH;;AAED,QAAI,KAAKQ,KAAT,EAAgB;AACZR,MAAAA,OAAO,CAAC5B,WAAD,CAAP,GAAwB,GAAEC,aAAc,IAAG,KAAKmC,KAAM,EAAtD;AACH;;AAED,2CAAYW,UAAZ;AAAwBnB,MAAAA;AAAxB;AACH;;AApFuB","sourcesContent":["import { Options } from '../types/client'\r\nimport axios from 'axios'\r\n\r\nconst HEADER_AUTH = 'Authorization'\r\nconst HEADER_BEARER = 'BEARER'\r\n\r\nexport default class Client {\r\n    token = ''\r\n    url = 'http://103.101.76.162:9002'\r\n    urlPolitical = 'http://103.101.76.162:9002'\r\n    urlVersion = '/api/v1'\r\n    urlSearchViolations='http://103.101.76.162:9005'\r\n    defaultHeaders: { [x: string]: string } = {}\r\n    userId = ''\r\n    userRole?: string\r\n\r\n    getUrl() {\r\n        return this.url\r\n    }\r\n\r\n    setUrl(url: string) {\r\n        this.url = url\r\n    }\r\n\r\n    getUrlVersion() {\r\n        return this.urlVersion\r\n    }\r\n\r\n    getToken() {\r\n        return this.token\r\n    }\r\n\r\n    setToken(token: string) {\r\n        this.token = token\r\n    }\r\n\r\n    setUserId(userId: string) {\r\n        this.userId = userId\r\n    }\r\n\r\n    setUserRole(userRole: string) {\r\n        this.userRole = userRole\r\n    }\r\n\r\n    getBaseRoute() {\r\n        return `${this.url}${this.urlVersion}`\r\n    }\r\n\r\n    getBaseRoutePolitical() {\r\n        return `${this.urlPolitical}${this.urlVersion}`\r\n    }\r\n    //searchViolation\r\n    getBaseRouteSearchViolation(){\r\n        return `${this.urlSearchViolations}${this.urlVersion}`\r\n    }\r\n    //endsearch\r\n    getUsersRoute() {\r\n        return `${this.getBaseRoute()}/users`\r\n    }\r\n\r\n    getParkingRoute() {\r\n        return `${this.getBaseRoute()}/parking`\r\n    }\r\n\r\n    getNoParkingRoute() {\r\n        return `${this.getBaseRoute()}/no_parking`\r\n    }\r\n\r\n    getPolitical() {\r\n        return `${this.getBaseRoutePolitical()}/political`\r\n    }\r\n\r\n    getDetailNoParking(id: string) {\r\n        return `${this.getBaseRoute()}/no_parking/${id}`\r\n    }\r\n\r\n    getOptions(options: Options) {\r\n\r\n        const newOptions = { ...options }\r\n        let headers = { ...this.defaultHeaders }\r\n\r\n        if (options.headers) {\r\n            headers = { ...headers, ...options.headers }\r\n        }\r\n\r\n        if (this.token) {\r\n            headers[HEADER_AUTH] = `${HEADER_BEARER} ${this.token}`\r\n        }\r\n\r\n        return { ...newOptions, headers }\r\n    }\r\n\r\n    login = (username: string, password: string) => {}\r\n\r\n    logout = () => {}\r\n    //searchViolation\r\n    getSearchViolation=async(plate:string)=>{\r\n        const {data}=await this.doFetchWithResponse(`${this.getBaseRouteSearchViolation()}/violations/search?plate=${plate}&page=${1}`,{method:'post',data:{plate}})\r\n        console.log(data);\r\n        return data\r\n    }\r\n    ///endSearch\r\n    getProvinces = async () => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getPolitical()}/provinces`, { method: 'get', data: {} })\r\n        return data\r\n    }\r\n\r\n    getDistricts = async (code: string) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getPolitical()}/districts?province=${code}`, { method: 'get', data: {} })\r\n        return data\r\n    }\r\n\r\n    getCommunes = async (code: string) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getPolitical()}/communes?district=${code}`, { method: 'get', data: {} })\r\n        return data\r\n    }\r\n\r\n    // manage noParking\r\n    getDataNoParking = async () => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, { method: 'get', data: {} })\r\n        return data\r\n    }\r\n\r\n    getDataNoParkingDetail = async (id: string) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, { method: 'get', data: { id } })\r\n        return data\r\n    }\r\n\r\n    addOneNoParking = async (payload: object) => {\r\n        \r\n        const { data } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}`, { method: 'post', data: { ...payload } })\r\n        return data\r\n    }\r\n\r\n    updateOneNoParking = async (payload: any) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getDetailNoParking(payload.id)}`, { method: 'put', data: { ...payload } })\r\n\r\n        return data\r\n    }\r\n\r\n    deleteOneNoParking = async (id: string) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getDetailNoParking(id)}`, { method: 'delete', data: { id } })\r\n        return data\r\n    }\r\n\r\n    searchParking = async (payload: any) => {\r\n        const { data } = await this.doFetchWithResponse(\r\n            `${this.getParkingRoute()}?district=${payload.district}&commune=${payload.commune}&type=${payload.type}&query=${payload.q}&fee=${payload.fee}`,\r\n            {\r\n                method: 'get',\r\n                data: {},\r\n            },\r\n        )\r\n        return data\r\n    }\r\n\r\n    searchNoParking = async (payload: any) => {\r\n        const { data } = await this.doFetchWithResponse(`${this.getNoParkingRoute()}?type=${payload.type}&query=${payload.q}`, {\r\n            method: 'get',\r\n            data: {},\r\n        })\r\n        return data\r\n    }\r\n    // end manage noParking\r\n\r\n    getParking = async () => {\r\n        const { data }: any = await this.doFetchWithResponse(`${this.getParkingRoute()}`, { method: 'get', data: {} })\r\n        return data\r\n    }\r\n\r\n    doFetch = async (url: string, options: Options) => {\r\n        const { data } = await this.doFetchWithResponse(url, options)\r\n        return data\r\n    }\r\n\r\n    doFetchWithResponse = async (url: string, options: Options) => {\r\n        try {\r\n            const response = await axios({ url: url, ...this.getOptions(options) })\r\n\r\n            const { data, headers } = response\r\n\r\n            return { data, headers }\r\n        } catch (error) {\r\n            return error.messages\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}